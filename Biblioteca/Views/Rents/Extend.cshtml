@model Biblioteca.Models.Rent

@{
    ViewBag.Title = "Extend Rent";
    var today = DateTime.Today.ToString("yyyy-MM-dd");
    var lastDate = Model.DateEnd.ToString("yyyy-MM-dd");
}

<h2>Extend</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Rent</h4>
    <span class="text-danger">
        @ViewBag.Errors
    </span>
    <hr />
    @Html.HiddenFor(model => model.RentID)

    <div class="form-group">
        @Html.LabelFor(model => model.DateEnd, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="input-group" style="display: block;">
                @Html.EditorFor(model => model.DateEnd, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                <div class="input-group-btn">
                    <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Time from today <span class="caret"></span></button>
                    <ul class="dropdown-menu">
                        <li><a href="javascript:addToDate(7);">One week</a></li>
                        <li><a href="javascript:addToDate(14);">Two weeks</a></li>
                        <li><a href="javascript:addToDate(21);">Three weeks</a></li>
                        <li><a href="javascript:addToDate(30);">One month</a></li>
                    </ul>
                </div>
                @Html.ValidationMessageFor(model => model.DateEnd, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Extend" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        var today = new Date("@today");
        var dateEl = $("#DateEnd");
        dateEl.val("@lastDate");

        function addToDate(n) {
            let newDate = new Date(today);
            newDate.setDate(newDate.getDate() + n);
            let day = ("0" + newDate.getDate()).slice(-2);
            let month = ("0" + (newDate.getMonth() + 1)).slice(-2);
            let res = newDate.getFullYear() + "-" + (month) + "-" + (day);
            dateEl.val(res);
        }
    </script>
}
