@model Biblioteca.Models.Book

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Book</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.BookID)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.YearReleased, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.YearReleased, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = 4} )
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <input id="Authors" name="Authors" type="hidden" value="" />
    <div class="form-group">
        <label class="control-label col-md-2" style="margin-bottom: -16px;">Authors</label>
        <div id="authorsContainer" class="col-md-offset-2 col-md-10"></div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    
    <script>
        var authors = $.parseJSON('@Html.Raw(ViewBag.authors)')
        var selectedAuthors = $.parseJSON('@Html.Raw(ViewBag.selectedAuthors)')
        var ctn = $('#authorsContainer');
        let input = $('#Authors');

        attachMultiSelect(ctn, input, authors, selectedAuthors);
    </script>
}
